仓库克隆流程：
	1、复制git仓库地址(不是网页地址，使用https方式)
	2、使用命令行进入具体文件夹（如：D://prgjects）
	3、git clone [复制的git仓库地址，删去方括号]

代码上传流程：
	1、 git add .  #	添加文件到缓存区
	2、 git commit -m '注释内容' # 给缓存区内容添加标记
	3、 git pull # 拉取远端仓库更新内容
	4、 git diff # 没有出现Already up to date.时查看冲突
	5、 git push # 推送本地更新到远端仓库

解决代码冲突问题：
	代码上传流程-4中没有出现Already up to date.时查看冲突
	1、查看命令行中的提示信息
	2、找到冲突代码
	3、找到冲突代码编写人
	4、解决冲突（包括且不限于单方保留，双方保留，重新开发等）
	5、重新进行代码上传流程

切换分支操作
	前提在仓库完成了分支创建（流程）
	1、git fetch #获取远端仓库更新
	2、git branch -a #查看新分支是否获取
	3、git checkout [分支名] #切换分支，本地未创建则自动创建并切换。删除[]
	4、git pull #获取当前分支更新

合并分支操作
	前提当前分支比目标分支有更新
	当前分支为工作分支（如：develop），目标分支为需合并的分支（如：master）
	1、代码提交流程，保持当前分支远端仓库代码一致
	2、git checkout [master] #切换到目标分支。删除[]
	3、git pull #更新目标分支，保持目标分支远端仓库代码一致
	4、git merge [develop] #把develop分支合并到当前分支（master）
	5、git diff #查看冲突，解决冲突。没有冲突跳转7
	6、代码提交流程
	7、git push #提交合并代码